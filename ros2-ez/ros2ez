#!/bin/bash
gpu_string=$(lspci | grep VGA)
gpu_param=""
if grep -q "force-integrated" <<< "$1" || grep -q "fi" <<< "$1"
then
    gpu_param="--device /dev/dri/card0"
    shift
elif grep -q "nvidia" <<< "$gpu_string" || grep -q "Nvidia" <<< "$gpu_string" || grep -q "NVIDIA" <<< "$gpu_string"
then
    gpu_param="--nvidia"
elif grep -q "intel" <<< "$gpu_string" || grep -q "Intel" <<< "$gpu_string" || grep -q "INTEL" <<< "$gpu_string"
then
    gpu_param="--device /dev/dri/card0"
else
    echo "No Nvidia or Intel GPU found. This case has not been investigated yet. GUI integration might be broken. (Good luck!)"
fi
echo $gpu_param
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
volumes=""
cwd=$(pwd)
while read -r line
do
    wsdir=$(eval echo -e "$line")
    volumes=$volumes"--volume $wsdir:/opt/ros/$(basename $wsdir) "
done < $SCRIPT_DIR/../includes/ros2_ws.txt
cd $cwd
x="sudo "$(sudo rocker --mode dry-run --network host --x11 $gpu_param --volume ros2ez-volume:/opt/ros/humble/ --volume $SCRIPT_DIR/../includes/ros2_ws.txt:/opt/ros/ros2_ws.txt $volumes $SCRIPT_DIR/../includes/ros2_entrypoint.bash:/root/.bashrc -- ros2_ez:latest | tail -n 1 | sed -e 's/-v .*ros2ez-volume:/-v ros2ez-volume:/')
xauthf="$((echo \"$x\") | grep -E -o '/tmp/.docker[a-zA-Z0-9_-]+.xauth' | head -1)"
touch $xauthf
/bin/bash -c "xauth nlist $DISPLAY | sed -e 's/^..../ffff/' | xauth -f $xauthf nmerge -"
extras="env $ENV /bin/bash"
if [ $# -gt 0 ]
then
    extras=$extras" -c \"source /root/.bashrc && $* \""
fi
x="${x} ${extras}"
printf "Executing:\n---\n$x\n---\n"
eval "$x"
